<UserControl x:Class="ReiEditAA2.Views.Partial.TextureView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:code="clr-namespace:ReiEditAA2.Code"
             xmlns:code1="clr-namespace:AA2Lib.Code;assembly=AA2Lib"
             xmlns:converters="clr-namespace:AA2Lib.Converters;assembly=AA2Lib"
             xmlns:effects="clr-namespace:AA2Lib.Effects;assembly=AA2Lib" mc:Ignorable="d" d:DesignHeight="180"
             d:DesignWidth="400" x:ClassModifier="internal">
    <UserControl.Resources>
        <converters:HueToFloatConverter x:Key="HueConverter" />
        <converters:BrightnessToFloatConverter x:Key="ValueConverter" />
        <converters:ShadowColorConveter x:Key="ShadowColorConverter" />
        <system:Byte x:Key="MaleByte">1</system:Byte>
        <converters:ComparisonConverter x:Key="TrueFalseComparisonConverter" />

        <Style x:Key="TextureComboItem" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.ContentTemplate>
                                    <DataTemplate DataType="{x:Type code1:TextureWatcher+TextureElement}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="ImgBorder" BorderThickness="1" BorderBrush="Black"
                                                    Margin="2" VerticalAlignment="Center">
                                                <Image x:Name="Img" Width="40" Height="40" Stretch="Uniform"
                                                       RenderOptions.BitmapScalingMode="HighQuality"
                                                       Source="{Binding Path=Image}" />
                                            </Border>
                                            <TextBlock Grid.Column="1" Margin="3,0" Text="{Binding Path=Name}"
                                                       VerticalAlignment="Center" />
                                        </Grid>
                                        <DataTemplate.Triggers>
                                            <Trigger SourceName="Img" Property="Source" Value="{x:Null}">
                                                <Setter TargetName="ImgBorder" Property="Visibility" Value="Collapsed" />
                                            </Trigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ContentPresenter.ContentTemplate>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Bd" Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid
        DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Path=TextureViewModel}"
        IsEnabled="{Binding Path=ClothesViewModel.CharacterViewModel.Profile.Gender.Value, Converter={StaticResource TrueFalseComparisonConverter}, ConverterParameter={StaticResource MaleByte}}">
        <Grid.Resources>
            <system:Int32 x:Key="Saturation">50</system:Int32>
            <Style TargetType="{x:Type ContentControl}">
                <Setter Property="{x:Static code:CharAttributeHelper.CharacterProperty}"
                        Value="{Binding Path=ClothesViewModel.CharacterViewModel.Character}" />
            </Style>
            <ImageBrush x:Key="DisplacementBrush" ImageSource="../../Resources/Displacement.png" />

            <effects:MultiplyEffect x:Key="MultiplyEffect">
                <effects:MultiplyEffect.Input2>
                    <VisualBrush>
                        <VisualBrush.Visual>
                            <Rectangle Width="128" Height="128">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="Transparent" Offset="0.5" />
                                        <GradientStop Offset="0.5">
                                            <GradientStop.Color>
                                                <MultiBinding Converter="{StaticResource ShadowColorConverter}">
                                                    <Binding Path="ShadowHue.Value" />
                                                    <Binding Source="{StaticResource Saturation}" />
                                                    <Binding Path="ShadowBrightness.Value" />
                                                </MultiBinding>
                                            </GradientStop.Color>
                                        </GradientStop>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </effects:MultiplyEffect.Input2>
            </effects:MultiplyEffect>
            <effects:DisplacementEffect x:Key="DisplacementEffect" DisplaceBrush="{StaticResource DisplacementBrush}"
                                        DisplacementAmount="0.025" LightColor="#9FFFFFFF">
                <effects:DisplacementEffect.ShadowColor>
                    <MultiBinding Converter="{StaticResource ShadowColorConverter}">
                        <Binding Path="ShadowHue.Value" />
                        <Binding Source="{StaticResource Saturation}" />
                        <Binding Path="ShadowBrightness.Value" />
                    </MultiBinding>
                </effects:DisplacementEffect.ShadowColor>
            </effects:DisplacementEffect>
            <converters:EffectSwitchConverter x:Key="EffectSwitchConverter"
                                              EffectTrue="{StaticResource MultiplyEffect}"
                                              EffectFalse="{StaticResource DisplacementEffect}" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0" Margin="5">
            <Border BorderThickness="1" CornerRadius="1" BorderBrush="Black">
                <StackPanel>
                    <Grid VerticalAlignment="Center" Margin="5,2,2,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Path=SetName, StringFormat='{}{0} Texture'}"
                                   HorizontalAlignment="Left" />
                        <ToggleButton x:Name="DisplacementCheckBox" Grid.Column="1" ToolTip="Half OverlayLayer Preview"
                                      IsChecked="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType=UserControl}, Path=ViewHalfShadow}">
                            <Border Width="10" Height="10" BorderBrush="Black" BorderThickness="1">
                                <Rectangle Width="4" Height="10" Fill="Black" HorizontalAlignment="Right" />
                            </Border>
                        </ToggleButton>
                    </Grid>
                    <Border Margin="2" BorderBrush="Black" BorderThickness="1">
                        <Decorator
                            Effect="{Binding ElementName=DisplacementCheckBox, Path=IsChecked, Converter={StaticResource EffectSwitchConverter}}">
                            <Decorator>
                                <Decorator.Effect>
                                    <effects:HueShiftEffect
                                        Shift="{Binding Path=Hue.Value, Converter={StaticResource HueConverter}}" />
                                </Decorator.Effect>
                                <Decorator>
                                    <Decorator.Effect>
                                        <effects:BrightnessShiftEffect
                                            Shift="{Binding Path=Brightness.Value, Converter={StaticResource ValueConverter}}" />
                                    </Decorator.Effect>
                                    <Image Height="128" Width="128"
                                           Source="{Binding ElementName=ComboTextures, Path=SelectedItem.(code1:TextureWatcher+TextureElement.Image)}" />
                                </Decorator>
                            </Decorator>
                        </Decorator>
                    </Border>
                </StackPanel>
            </Border>
        </Grid>
        <Grid Grid.Column="1" VerticalAlignment="Center">
            <Grid.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Margin" Value="2,5" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0" Text="Texture:" />
            <ComboBox x:Name="ComboTextures" Grid.Column="1" Grid.Row="0" SelectedValuePath="Value"
                      DisplayMemberPath="Name" ItemsSource="{Binding Path=TextureFilesList}"
                      SelectedValue="{Binding Path=Texture.Value, Mode=TwoWay}" VerticalAlignment="Center"
                      ItemContainerStyle="{StaticResource TextureComboItem}" />
            <Button Grid.Column="2" Grid.Row="0" Content="Clear" VerticalAlignment="Center" Margin="2,0"
                    Click="ClearButton_OnClick" />
            <TextBlock Grid.Column="0" Grid.Row="1" Text="Base Hue:" />
            <ContentControl Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2"
                            code:CharAttributeHelper.Attribute="{Binding Path=Hue.Key}" VerticalAlignment="Center" />
            <TextBlock Grid.Column="0" Grid.Row="2" Text="Base Brightness:" />
            <ContentControl Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2"
                            code:CharAttributeHelper.Attribute="{Binding Path=Brightness.Key}"
                            VerticalAlignment="Center" />

            <TextBlock Grid.Column="0" Grid.Row="3" Text="Shadow Hue:" />
            <ContentControl Grid.Column="1" Grid.Row="3" Grid.ColumnSpan="2"
                            code:CharAttributeHelper.Attribute="{Binding Path=ShadowHue.Key}"
                            VerticalAlignment="Center" />
            <TextBlock Grid.Column="0" Grid.Row="4" Text="Shadow Brightness:" />
            <ContentControl Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="2"
                            code:CharAttributeHelper.Attribute="{Binding Path=ShadowBrightness.Key}"
                            VerticalAlignment="Center" />
        </Grid>
    </Grid>
</UserControl>